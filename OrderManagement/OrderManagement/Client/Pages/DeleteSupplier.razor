@page "/supplier/delete/{id:int}"
@using OrderManagement.Client.Interfaces
@using OrderManagement.Shared.Entities  
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject ISupplierService SupplierService
<h2>Delete Supplier</h2>
<br />
<div class="form-group">
    <h4>Do you want to delete this supplier?</h4>
    <table class="table table-danger">
        <tbody>
            <tr>
                <td>Name</td>
                <td>@supplier.Name</td>
            </tr>
            <tr>
                <td>AddressLine1</td>
                <td>@supplier.AddressLine1</td>
            </tr>
             <tr>
                <td>AddressLine2</td>
                <td>@supplier.AddressLine2</td>
            </tr>
             <tr>
                <td>City</td>
                <td>@supplier.City</td>
            </tr>
             <tr>
                <td>State</td>
                <td>@supplier.State</td>
            </tr>
             <tr>
                <td>Postal Code</td>
                <td>@supplier.PostalCode</td>
            </tr>
          
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () => await RemoveSupplier(supplier))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>
@code {
    [Parameter]
    public int id { get; set; }
    Supplier supplier = new Supplier();
    protected override async Task OnInitializedAsync()
    {
        supplier = await SupplierService.GetSupplier(id);
    }
    protected async Task RemoveSupplier(Supplier supplier)
    {
        await SupplierService.DeleteSupplier(supplier);
        NavigationManager.NavigateTo("/suppliers");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/suppliers");
    }
}